version: 2.1

orbs:
  nx: nrwl/nx@1.6.1
  browser-tools: circleci/browser-tools@1.4.1

env:
  VERCEL_ORG_ID: ${VERCEL_TODO_APP_PROJECT_ID}
  VERCEL_PROJECT_ID: ${VERCEL_TOKEN}

# the default pipeline parameters, which will be updated according to
# the results of the path-filtering orb
parameters:
  run-todo-app-job:
    type: boolean
    default: false

# here we specify our workflows, most of which are conditionally
# executed based upon pipeline parameter values. Each workflow calls a
# specific job defined above, in the jobs section.

# jobs are omited for this purpose
workflows:
  # when pipeline parameter, run-design-system-job is true, the
  # jobs is triggered.
  todo-app:
    when: << pipeline.parameters.run-todo-app-job >>
    jobs:
      - lint
      - tests:
          requires:
            - lint
      - build:
          requires:
            - tests
      - lighthouse-mobile:
          requires:
            - tests
            - build
      - lighthouse-desktop:
          requires:
            - tests
            - build
            - lighthouse-mobile
      - vercel-preview:
          requires:
            - lint
            - tests
            - lighthouse-mobile
            - lighthouse-desktop
      - vercel-prod:
          filters:
            branches:
              only:
                master
          requires:
            - lint
            - tests
            - lighthouse-mobile
            - lighthouse-desktop
            - vercel-preview

jobs:
  lint:
    working_directory: ~/front-end-mentor
    docker:
      - image: cimg/node:18.15.0-browsers
    environment:
      MAIN_BRANCH_NAME: master
    steps:
      - checkout:
          path: ~/front-end-mentor
      - restore_cache:
          name: Restore Yarn Package Cache
          keys:
            - yarn-packages-{{ checksum "yarn.lock" }}
      - run: cd todo-app/ && yarn install --frozen-lockfile --cache-folder ~/.cache/yarn
      - save_cache:
          name: Save Yarn Package Cache
          key: yarn-packges-{{ checksum "yarn.lock" }}
          paths:
            - .yarn/cache
            - .yarn/unplugged
      - nx/set-shas:
          allow-on-hold-workflow: true
          error-on-no-successful-workflow: true
          main-branch-name: master
          workflow-name: nx-pipeline
      - run: cd todo-app/ && node --version
      - run: cd todo-app/ && npx nx affected --base=master --head=HEAD --target=lint
  tests:
    working_directory: ~/front-end-mentor
    docker:
      - image: cimg/node:18.15.0-browsers
    environment:
      MAIN_BRANCH_NAME: master
    steps:
      - checkout:
          path: ~/front-end-mentor
      - restore_cache:
          name: Restore Yarn Package Cache
          keys:
            - yarn-packages-{{ checksum "yarn.lock" }}
      - run: cd todo-app/ && yarn install --frozen-lockfile --cache-folder ~/.cache/yarn
      - save_cache:
          name: Save Yarn Package Cache
          key: yarn-packges-{{ checksum "yarn.lock" }}
          paths:
            - .yarn/cache
            - .yarn/unplugged
      - nx/set-shas:
          allow-on-hold-workflow: true
          error-on-no-successful-workflow: true
          main-branch-name: master
          workflow-name: nx-pipeline
      - run: cd todo-app/ && yarn nx affected --target=test --base=master --head=HEAD
  lighthouse-mobile:
    working_directory: ~/front-end-mentor
    docker:
      - image: cimg/node:18.15.0-browsers
    environment:
      MAIN_BRANCH_NAME: master
    steps:
      - checkout:
          path: ~/front-end-mentor
      - restore_cache:
          name: Restore Yarn Package Cache
          keys:
            - yarn-packages-{{ checksum "yarn.lock" }}
      - run: cd todo-app/ && yarn install --frozen-lockfile --cache-folder ~/.cache/yarn
      - save_cache:
          name: Save Yarn Package Cache
          key: yarn-packges-{{ checksum "yarn.lock" }}
          paths:
            - .yarn/cache
            - .yarn/unplugged
      - nx/set-shas:
          allow-on-hold-workflow: true
          error-on-no-successful-workflow: true
          main-branch-name: master
          workflow-name: nx-pipeline
      - browser-tools/install-chrome
      - browser-tools/install-chromedriver
      - run: cd todo-app/ && node --version
      - run: cd todo-app/ && yarn global add @lhci/cli
      - run: cd todo-app/ && yarn nx affected --target=build --base=master --head=HEAD 
      - run: cd todo-app/ && lhci autorun --config=../lighthouse-mobile.js --collect.staticDistDir=./dist/todo-app-/ --collect.isSinglePageApplication=true
      - store_artifacts:
          path: /tmp/lighthouseci
          destination: lighthouse-mobile-report
  lighthouse-desktop:
    working_directory: ~/front-end-mentor
    docker:
      - image: cimg/node:18.15.0-browsers
    environment:
      MAIN_BRANCH_NAME: master
    steps:
      - checkout:
          path: ~/front-end-mentor
      - restore_cache:
          name: Restore Yarn Package Cache
          keys:
            - yarn-packages-{{ checksum "yarn.lock" }}
      - run: cd todo-app/ && yarn install --frozen-lockfile --cache-folder ~/.cache/yarn
      - save_cache:
          name: Save Yarn Package Cache
          key: yarn-packges-{{ checksum "yarn.lock" }}
          paths:
            - .yarn/cache
            - .yarn/unplugged
      - nx/set-shas:
          allow-on-hold-workflow: true
          error-on-no-successful-workflow: true
          main-branch-name: master
          workflow-name: nx-pipeline
      - browser-tools/install-chrome
      - browser-tools/install-chromedriver
      - run: cd todo-app/ && node --version
      - run: cd todo-app/ && yarn global add @lhci/cli
      - run: cd todo-app/ && yarn nx affected --target=build --base=master --head=HEAD 
      - run: cd todo-app/ && lhci autorun --config=../lighthouse-desktop.js --collect.staticDistDir=./dist/todo-app-/ --collect.isSinglePageApplication=true
      - store_artifacts:
          path: /tmp/lighthouseci
          destination: lighthouse-desktop-report
  build:
    working_directory: ~/front-end-mentor
    docker:
      - image: cimg/node:18.15.0-browsers
    steps:
      - checkout:
          path: ~/front-end-mentor
      - restore_cache:
          name: Restore Yarn Package Cache
          keys:
            - yarn-packages-{{ checksum "yarn.lock" }}
      - run: cd todo-app/ && yarn install --frozen-lockfile --cache-folder ~/.cache/yarn
      - save_cache:
          name: Save Yarn Package Cache
          key: yarn-packges-{{ checksum "yarn.lock" }}
          paths:
            - .yarn/cache
            - .yarn/unplugged
      - nx/set-shas:
          allow-on-hold-workflow: true
          error-on-no-successful-workflow: true
          main-branch-name: master
          workflow-name: nx-pipeline
      - run: cd todo-app/ &&  node --version
      - run: cd todo-app/ && yarn nx affected --target=build --base=master --head=HEAD
  vercel-preview:
    working_directory: ~/front-end-mentor
    docker:
      - image: cimg/node:18.15.0
    steps:
      - checkout:
          path: ~/front-end-mentor
      - restore_cache:
          name: Restore Yarn Package Cache
          keys:
            - yarn-packages-{{ checksum "yarn.lock" }}
      - run: cd todo-app/ && yarn install --frozen-lockfile --cache-folder ~/.cache/yarn
      - save_cache:
          name: Save Yarn Package Cache
          key: yarn-packges-{{ checksum "yarn.lock" }}
          paths:
            - .yarn/cache
            - .yarn/unplugged
      - nx/set-shas:
          allow-on-hold-workflow: true
          error-on-no-successful-workflow: true
          main-branch-name: master
          workflow-name: nx-pipeline
      - run: cd todo-app/ && node --version
      - run: cd todo-app/ && yarn nx affected --target=build --base=master --head=HEAD
      - run: yarn global add vercel@latest
      - run: vercel pull --yes --environment=preview --token=${VERCEL_TOKEN} --cwd=./todo-app/
      - run: vercel build --token=${VERCEL_TOKEN} --cwd=./todo-app/
      - run: vercel deploy --prebuilt --token=${VERCEL_TOKEN} --cwd=./todo-app/
  vercel-prod:
    working_directory: ~/front-end-mentor
    docker:
      - image: cimg/node:18.15.0
    steps:
      - checkout:
          path: ~/front-end-mentor
      - restore_cache:
          name: Restore Yarn Package Cache
          keys:
            - yarn-packages-{{ checksum "yarn.lock" }}
      - run: cd todo-app/ && yarn install --frozen-lockfile --cache-folder ~/.cache/yarn
      - save_cache:
          name: Save Yarn Package Cache
          key: yarn-packges-{{ checksum "yarn.lock" }}
          paths:
            - .yarn/cache
            - .yarn/unplugged
      - nx/set-shas:
          allow-on-hold-workflow: true
          error-on-no-successful-workflow: true
          main-branch-name: master
          workflow-name: nx-pipeline
      - run: cd todo-app/ && node --version
      - run: cd todo-app/ && yarn nx affected --target=build --base=master --head=HEAD
      - run: yarn global add vercel@latest
      - run: vercel pull --yes --environment=preview --token=${VERCEL_TOKEN} --debug --cwd=./todo-app/
      - run: vercel build --token=${VERCEL_TOKEN} --cwd=./todo-app/
      - run: vercel deploy --prebuilt --token=${VERCEL_TOKEN} --cwd=./todo-app/
      - run: vercel deploy --prod --token=${VERCEL_TOKEN} --cwd=./todo-app/
